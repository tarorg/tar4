---
import Layout from '../layouts/Layout.astro';

const modules = [
    "All", "Products", "Files", "Posts", "Pathai", "Settings", "Links", "Reports", "Pin"
];

const searchResults = [
    { title: "Product A", category: "Products", description: "High-quality product", price: "$19.99" },
    { title: "Product B", category: "Products", description: "Bestselling item", price: "$24.99" },
    { title: "Product C", category: "Products", description: "Limited edition release", price: "$39.99" },
    { title: "Important File", category: "Files", description: "Quarterly report" },
    { title: "Latest Post", category: "Posts", description: "New feature announcement" },
    { title: "Product Review", category: "Posts", description: "In-depth analysis of Product B" },
    { title: "Company Update", category: "Posts", description: "Exciting news about our growth" },
    { title: "Pathai Route", category: "Pathai", description: "Scenic route information" },
    { title: "User Settings", category: "Settings", description: "Manage your account" },
    { title: "Personal Website", category: "Links", description: "My portfolio and blog" },
    { title: "GitHub Profile", category: "Links", description: "Open-source contributions" },
    { title: "LinkedIn", category: "Links", description: "Professional network" },
    { title: "Monthly Sales Report", category: "Reports", description: "Overview of sales performance" },
    { title: "Order Summary Report", category: "Reports", description: "Detailed breakdown of recent orders" },
    { title: "Inventory Status Report", category: "Reports", description: "Current stock levels and projections" },
    { title: "Customer Satisfaction Survey", category: "Reports", description: "Analysis of recent customer feedback" },
];
---

<Layout title="Tars - Search">
    <div class="min-h-screen bg-white p-4">
        <div class="w-full max-w-2xl mx-auto">
            <form class="mb-8">
                <div class="flex">
                    <select id="search-filter" class="flex-shrink-0 z-10 inline-flex items-center py-2.5 px-4 text-sm font-medium text-gray-900 bg-gray-100 border border-gray-300 rounded-s-lg hover:bg-gray-200 focus:ring-4 focus:outline-none focus:ring-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700 dark:text-white dark:border-gray-600">
                        {modules.map((module) => (
                            <option value={module}>{module}</option>
                        ))}
                    </select>
                    <input type="search" id="search-input" class="block p-2.5 w-full z-20 text-sm text-gray-900 bg-gray-50 rounded-e-lg border-s-0 border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-s-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:border-blue-500" placeholder="Search..." required />
                </div>
            </form>

            <div id="pin-blocks" class="hidden mb-4">
                <div class="flex justify-between">
                    <div class="w-1/2 p-2 bg-gray-100 rounded mr-2">
                        <h3 class="font-medium">Customer</h3>
                        <p class="text-sm">John Doe</p>
                    </div>
                    <div class="w-1/2 p-2 bg-gray-100 rounded ml-2">
                        <h3 class="font-medium">Cart</h3>
                        <p class="text-sm">2 items - $44.98</p>
                    </div>
                </div>
            </div>

            <ul class="divide-y divide-gray-100" id="search-results">
                {searchResults.map((result) => (
                    <li class="py-3 hover:bg-gray-50 transition-colors duration-150 ease-in-out">
                        <div class="flex items-center justify-between">
                            <div>
                                <h2 class="text-base font-medium text-gray-800">{result.title}</h2>
                                <p class="text-sm text-gray-600 mt-1">{result.description}</p>
                                {result.price && <p class="text-sm font-medium text-blue-600 mt-1">{result.price}</p>}
                            </div>
                            <span class="text-xs text-gray-400">{result.category}</span>
                        </div>
                    </li>
                ))}
            </ul>
        </div>
    </div>
</Layout>

<script define:vars={{ modules }}>
    const searchInput = document.getElementById('search-input');
    const searchFilter = document.getElementById('search-filter');
    const resultsList = document.getElementById('search-results');
    const pinBlocks = document.getElementById('pin-blocks');
    
    if (searchInput && searchFilter && resultsList && pinBlocks) {
        const listItems = resultsList.getElementsByTagName('li');

        function filterResults() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedModule = searchFilter.value;

            Array.from(listItems).forEach(item => {
                const title = item.querySelector('h2')?.textContent?.toLowerCase() || '';
                const description = item.querySelector('p')?.textContent?.toLowerCase() || '';
                const category = item.querySelector('span')?.textContent || '';
                const categorySpan = item.querySelector('span');

                const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
                const matchesModule = selectedModule === 'All' || category === selectedModule;

                if (selectedModule === 'Pin') {
                    if (category === 'Products' && matchesSearch) {
                        item.style.display = '';
                        if (categorySpan) categorySpan.style.display = 'none';
                    } else {
                        item.style.display = 'none';
                    }
                } else {
                    if (matchesSearch && matchesModule) {
                        item.style.display = '';
                        if (categorySpan) categorySpan.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                }
            });

            // Apply layout changes
            if (selectedModule === 'Pin') {
                pinBlocks.style.display = 'block';
                resultsList.classList.add('grid', 'grid-cols-2', 'gap-4');
                resultsList.classList.remove('divide-y');
            } else {
                pinBlocks.style.display = 'none';
                resultsList.classList.remove('grid', 'grid-cols-2', 'gap-4');
                resultsList.classList.add('divide-y');
            }

            // Save the selected module to localStorage
            localStorage.setItem('selectedModule', selectedModule);
        }

        searchInput.addEventListener('input', filterResults);
        searchFilter.addEventListener('change', filterResults);

        // Load the saved module from localStorage
        const savedModule = localStorage.getItem('selectedModule');
        if (savedModule && modules.includes(savedModule)) {
            searchFilter.value = savedModule;
        }

        // Initial filter application
        filterResults();
    }
</script>